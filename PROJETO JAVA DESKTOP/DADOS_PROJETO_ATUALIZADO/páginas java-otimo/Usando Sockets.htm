
<!-- saved from url=(0034)http://www.guj.com.br/articles/126 -->
<html><head><meta http-equiv="Content-Type" content="text/html; charset=ISO-8859-1">


	




<title>GUJ - Usando Sockets</title>
<link href="./Usando Sockets_files/guj3.css" media="screen" rel="stylesheet" type="text/css">

<!-- OAS SETUP begin -->
<script language="JavaScript">
<!--
//configuration
OAS_url = 'http://media.realmedia.com.br/RealMedia/ads/';
OAS_listpos = 'Top,Right,x01,x04';
OAS_query = '';
OAS_sitepage = 'guj/internas';
//end of configuration
OAS_version = 10;
OAS_rn = '001234567890'; OAS_rns = '1234567890';
OAS_rn = new String (Math.random()); OAS_rns = OAS_rn.substring (2, 11);
function OAS_NORMAL(pos) {
	document.write('<A HREF="' + OAS_url + 'click_nx.ads/' + OAS_sitepage + '/1' + OAS_rns + '@' + OAS_listpos + '!' + pos + OAS_query + '" TARGET=_top>');
	document.write('<IMG SRC="' + OAS_url + 'adstream_nx.ads/' + OAS_sitepage + '/1' + OAS_rns + '@' + OAS_listpos + '!' + pos + OAS_query + '" BORDER=0></A>');
}
//-->
</script>
<script language="JavaScript">
<!--
OAS_version = 11;
if (navigator.userAgent.indexOf('Mozilla/3') != -1)
OAS_version = 10;
if (OAS_version >= 11)
document.write('<SCR'+ 'IPT LANGUAGE=JavaScript1.1 SRC="' + OAS_url + 'adstream_mjx.ads/' + OAS_sitepage + '/1' + OAS_rns + '@' + OAS_listpos + OAS_query + '"></SC'+'RIPT>');
//-->
</script><script language="JavaScript1.1" src="./Usando Sockets_files/1269417109@Top,Right,x01,x04"></script><script language="JavaScript">
<!-- 
document.write('')
function OAS_AD(pos) {
if (OAS_version >= 11)
	OAS_RICH(pos);
else
	OAS_NORMAL(pos);
}
//-->
</script>
<!-- OAS SETUP end -->
<!--[if IE]>
<link href="/stylesheets/guj3-ie.css?20090222" media="screen" rel="stylesheet" type="text/css" />
<![endif]-->
<script type="text/javascript" src="./Usando Sockets_files/jquery-1.3.1.min.js"></script>
<script type="text/javascript" src="./Usando Sockets_files/jquery.dimensions.min.js"></script>
<script type="text/javascript">
$().ready(function() {
	$("#returnPath").val(document.location);
});
</script>
<style type="text/css">.dp-j .annotation { color: #646464; }.dp-j .number { color: #C00000; }</style><style type="text/css">.dp-j .annotation { color: #646464; }.dp-j .number { color: #C00000; }</style><style type="text/css">.dp-j .annotation { color: #646464; }.dp-j .number { color: #C00000; }</style><style type="text/css">.dp-j .annotation { color: #646464; }.dp-j .number { color: #C00000; }</style><style type="text/css">.dp-j .annotation { color: #646464; }.dp-j .number { color: #C00000; }</style><style type="text/css">.dp-j .annotation { color: #646464; }.dp-j .number { color: #C00000; }</style><style type="text/css">.dp-j .annotation { color: #646464; }.dp-j .number { color: #C00000; }</style><style type="text/css">.dp-j .annotation { color: #646464; }.dp-j .number { color: #C00000; }</style><style type="text/css">.dp-j .annotation { color: #646464; }.dp-j .number { color: #C00000; }</style><style type="text/css">.dp-j .annotation { color: #646464; }.dp-j .number { color: #C00000; }</style><style type="text/css">.dp-j .annotation { color: #646464; }.dp-j .number { color: #C00000; }</style><style type="text/css">.dp-j .annotation { color: #646464; }.dp-j .number { color: #C00000; }</style><style type="text/css">.dp-j .annotation { color: #646464; }.dp-j .number { color: #C00000; }</style><link rel="stylesheet" type="text/css" href="chrome-extension://knnjalkmmdbjmbnkdolelamkbnjoohbe/css/about.css"></head><style type="text/css" id="CWToolbarStyle">html { padding-top: 34px !important;}</style>

<body>
  <div id="header">
    <div class="container1">
    	<div id="banner">
			<!-- OAS AD 'Top' begin -->
			<script language="JavaScript">
			<!--
			OAS_AD('Top');
			//-->
			</script><!-- begin ad tag -->
<script type="text/javascript">
//<![CDATA[
ord=Math.random()*10000000000000000;
document.write('<script type="text/javascript" src="http://ad.doubleclick.net/adj/guj/;fiap=gujsuper;sz=728x90;click0=http://media.realmedia.com.br/RealMedia/ads/click_lx.ads/guj/internas/L12/784135300/Top/rmlanetwork/110602_fiapmba_guj/fiapmba_guj_home_int_super_110602.html/76556850786b3433424b5141416b3576?;ord=784135300' + ord + '?"><\/script>');
//]]>
</script><script type="text/javascript" src="./Usando Sockets_files/;fiap=gujsuper;sz=728x90"></script>
<!-- Copyright DoubleClick Inc., All rights reserved. -->
<!-- This code was autogenerated @ Mon Jun 27 11:14:10 EDT 2011 -->
<script src="./Usando Sockets_files/flashwrite_1_2.js"></script>
  
<div style="padding:0px;border:0px;margin:0px;overflow:hidden;width:728px;height=90px;position:relative"> <object classid="clsid:D27CDB6E-AE6D-11cf-96B8-444553540000" id="FLASH_AD" width="728" height="90"><param name="movie" value="http://s0.2mdn.net/2824562/2011_05_super_banner_mba.swf"><param name="quality" value="high"><param name="bgcolor" value="#"><param name="wmode" value="opaque"><param name="AllowScriptAccess" value="never"><embed src="http://s0.2mdn.net/2824562/2011_05_super_banner_mba.swf" quality="high" wmode="opaque" swliveconnect="TRUE" width="728" height="90" bgcolor="#" type="application/x-shockwave-flash" allowscriptaccess="never"></object> <div style="z-index:9999;padding:0px;border:0px;margin:0px;overflow:hidden;width:728px;height=90px;position:absolute;top:0px;left:0px"><a target="_blank" href="http://ad.doubleclick.net/click%3Bh%3Dv8/3b56/17/bf/%2a/y%3B242120798%3B0-0%3B1%3B50082471%3B3454-728/90%3B42819652/42837439/1%3B%3B~sscs%3D%3fhttp://media.realmedia.com.br/RealMedia/ads/click_lx.ads/guj/internas/L12/784135300/Top/rmlanetwork/110602_fiapmba_guj/fiapmba_guj_home_int_super_110602.html/76556850786b3433424b5141416b3576?http://www.fiap.com.br/mba2011/index.html?utm_source=guj&utm_medium=super_banner&utm_term=neuronio-2&utm_content=inscreva-se&utm_campaign=pos2011-2"><img src="./Usando Sockets_files/dot.gif" border="0" width="728" height="90"></a></div></div>
<noscript>&lt;a target="_blank" href="http://ad.doubleclick.net/click%3Bh%3Dv8/3b56/17/bf/%2a/y%3B242120798%3B0-0%3B1%3B50082471%3B3454-728/90%3B42819652/42837439/1%3B%3B%7Esscs%3D%3fhttp://media.realmedia.com.br/RealMedia/ads/click_lx.ads/guj/internas/L12/784135300/Top/rmlanetwork/110602_fiapmba_guj/fiapmba_guj_home_int_super_110602.html/76556850786b3433424b5141416b3576?http://www.fiap.com.br/mba2011/index.html?utm_source=guj&amp;utm_medium=super_banner&amp;utm_term=neuronio-2&amp;utm_content=inscreva-se&amp;utm_campaign=pos2011-2"&gt;&lt;img src="http://s0.2mdn.net/2824562/2011_05_super_banner_mba.gif"  border="0" alt="" &gt;&lt;/a&gt;</noscript>
<noscript>&lt;a href="http://media.realmedia.com.br/RealMedia/ads/click_lx.ads/guj/internas/L12/784135300/Top/rmlanetwork/110602_fiapmba_guj/fiapmba_guj_home_int_super_110602.html/76556850786b3433424b5141416b3576?http://ad.doubleclick.net/jump/guj/;fiap=gujsuper;sz=728x90;ord=784135300?" target="_blank" &gt;&lt;img src="http://ad.doubleclick.net/ad/guj/;fiap=gujsuper;sz=728x90;ord=784135300?" border="0" alt="" /&gt;&lt;/a&gt;</noscript>
<!-- end ad tag --> 
			<!-- OAS AD 'Top' end -->
    	</div>
      <div class="container2">
        <a href="http://www.guj.com.br/" id="logo">GUJ</a>
        <h2>Notícias, artigos e o maior fórum brasileiro sobre Java</h2>
      </div>
    </div>
  </div>

  <div id="menu">
    <ul>
      <li class="home">
        <a href="http://www.guj.com.br/">home</a>
      </li>
      <li class="forum">
        <a href="http://www.guj.com.br/forums/list.java">fórum</a>
      </li>
      
      <li class="noticias">
        <a href="http://www.guj.com.br/noticias">notícias</a>
      </li>
      
      <li class="topics">
        <a href="http://www.guj.com.br/recentTopics/list.java">tópicos recentes</a>
      </li>
        
      <li class="empregos">
		<a href="http://www.guj.com.br/jobs">empregos</a>
      </li>
    
      <li class="artigos">
      	<a href="http://www.guj.com.br/articles">artigos</a>
      </li>
    	<!--
      <li class="blogs">
        <a href="/posts">blogs</a>
      </li>
      -->
    </ul>
    
    <form action="http://www.guj.com.br/search" id="cse-search-box" class="busca">
	    <input type="hidden" name="cx" value="partner-pub-9448585618971060:4001950301">
	    <input type="hidden" name="cof" value="FORID:10">
	    <input type="hidden" name="ie" value="UTF-8">
	    <input class="campo_rounded" type="text" name="q" size="31" tabindex="1" style="border-top-width: 1px; border-right-width: 1px; border-bottom-width: 1px; border-left-width: 1px; border-top-style: solid; border-right-style: solid; border-bottom-style: solid; border-left-style: solid; border-top-color: rgb(126, 157, 185); border-right-color: rgb(126, 157, 185); border-bottom-color: rgb(126, 157, 185); border-left-color: rgb(126, 157, 185); padding-top: 2px; padding-right: 2px; padding-bottom: 2px; padding-left: 2px; background-image: url(http://www.google.com.br/cse/intl/en/images/google_custom_search_watermark.gif); background-attachment: initial; background-origin: initial; background-clip: initial; background-color: rgb(255, 255, 255); background-position: 0% 50%; background-repeat: no-repeat no-repeat; ">
	    <input type="image" class="botao" style="border: 0px;" src="./Usando Sockets_files/botao_ok.gif" tabindex="2">
	<input name="siteurl" type="hidden" value="www.guj.com.br/articles/126"></form>

<script type="text/javascript" src="./Usando Sockets_files/brand"></script>
	<iframe src="./Usando Sockets_files/like.htm" scrolling="no" frameborder="0" style="border:none; overflow:hidden; width:200px; height:21px; position:relative; top:7px;" allowtransparency="true"></iframe>
  </div>
  
  <div id="submenu">
    <div class="container1">
      <div class="container2">
          
      	
      		
	      	  <a id="myprofile" class="mainmenu" href="http://www.guj.com.br/user/edit/132475.java"><img src="./Usando Sockets_files/icon_mini_profile.gif" border="0" alt="[Profile]"> MEUS DADOS</a>&nbsp; 
              <a id="privatemessages" class="mainmenu" href="http://www.guj.com.br/pm/inbox.java"><img src="./Usando Sockets_files/icon_mini_message.gif" border="0" alt="[Message]">
                MENSAGENS PRIVADAS (0)
              </a>&nbsp;
              <a id="mymessages" class="mainmenu" href="http://www.guj.com.br/posts/listByUser/132475.java"><img src="./Usando Sockets_files/icon_mini_message.gif" border="0" alt="Minhas Mensagens">
                MINHAS MENSAGENS
              </a>&nbsp;
              <a id="favorites" class="mainmenu" href="http://www.guj.com.br/bookmarks/list/132475.java"><img src="./Usando Sockets_files/icon_mini_message.gif" border="0" alt="Favoritos">
                   FAVORITOS
              </a>&nbsp;
            
            	
            		<a id="newsletter" class="mainmenu" href="http://www.guj.com.br/articles/126#" onclick="$(&#39;#menuNewsletter&#39;).slideToggle(&#39;slow&#39;);"><img src="./Usando Sockets_files/icon_mini_message.gif" border="0" alt="Favoritos"> NEWSLETTER <span class="novo">(novo)</span></a>
	      		
            
	      	  <a href="http://www.guj.com.br/user/logout.java"><img src="./Usando Sockets_files/icon_mini_login.gif" border="0" alt="Logout"> LOGOUT</a> 
      		
      		
      	
      </div>
    </div>
  </div>

  
	  <div id="menuNewsletter" style="">
		 <div style="float:left; margin-top:5px;">
	  		Para participar da newsletter com o e-mail <strong>jorgelferrari@gmail.com</strong>, <a href="http://www.guj.com.br/newsletter/?_method=POST&gujUserId=132475">clique aqui</a>, ou acesse <a href="http://www.guj.com.br/user/edit/132475.java">seu cadastro</a> para modificar seu e-mail.
	  	 </div>
	  	 <div style="text-align:center; float:right; padding:5px;">
	  	 	<a href="http://www.guj.com.br/articles/126#" onclick="escondeNewsletter();"><img src="./Usando Sockets_files/cancel_16.png" border="0"></a>
	  	 </div>
	  </div>
	  
	  
	  <script language="javascript">
		function newsletterCookieHidden() {
			return readCookie('gujNewsletterMenu')=='hidden';
		}
		
		function readCookie(name) {
			var nameEQ = name + "=";
			var ca = document.cookie.split(';');
			for(var i=0;i < ca.length;i++) {
				var c = ca[i];
				while (c.charAt(0)==' ') c = c.substring(1,c.length);
				if (c.indexOf(nameEQ) == 0) return c.substring(nameEQ.length,c.length);
			}
			return null;
		}
		
		if (!newsletterCookieHidden()) {
			$("#menuNewsletter").attr("style","");
		}
		
		function escondeNewsletter() {
			$('#menuNewsletter').slideToggle('slow');
			if (!newsletterCookieHidden()){
				document.cookie='gujNewsletterMenu=hidden;path=/';
			}
		}
		</script>
  
  

<link href="./Usando Sockets_files/SyntaxHighlighter.css" media="screen" rel="stylesheet" type="text/css">
<style type="text/css">@import url(/stylesheets/tagging.css);</style>
<script src="./Usando Sockets_files/shCore.js" type="text/javascript"></script>
<script src="./Usando Sockets_files/shBrushJava.js" type="text/javascript"></script>

<script type="text/javascript">
window.onload = function () {
	dp.SyntaxHighlighter.HighlightAll('code');
}
</script>

<div id="content">
<div class="box">
<b class="spiffy"><b class="spiffy1"><b></b></b><b class="spiffy2"><b></b></b><b class="spiffy3"></b><b class="spiffy4"></b><b class="spiffy5"></b></b>
	<div class="spiffyfg inner-content">
  <span class="article">
    <h2><a href="http://www.guj.com.br/articles/126#">Usando Sockets</a>
    </h2>
  </span>
  
  <div class="miolo">
    <span class="data">em 19/08/2003</span>
    <span class="autor">, por <a href="mailto:leandrolima@leandrolima.eti.br">Leandro de Camargo Araujo Lima</a></span>
    <br>
  
    
	    <div style="float: left; padding: 10px;">
			<script type="text/javascript"><!--
			google_ad_client = "pub-7098584793170190";
			/* GUJ Quadrado Artigos */
			google_ad_slot = "2113535366";
			google_ad_width = 300;
			google_ad_height = 250;
			//-->
			</script> 
			<script type="text/javascript" src="./Usando Sockets_files/show_ads.js"> 
			</script><ins style="display:inline-table;border:none;height:250px;margin:0;padding:0;position:relative;visibility:visible;width:300px"><ins id="aswift_0_anchor" style="display:block;border:none;height:250px;margin:0;padding:0;position:relative;visibility:visible;width:300px"><iframe allowtransparency="true" frameborder="0" height="250" hspace="0" marginwidth="0" marginheight="0" onload="var i=this.id,s=window.google_iframe_oncopy,H=s&amp;&amp;s.handlers,h=H&amp;&amp;H[i],w=this.contentWindow,d;try{d=w.document}catch(e){}if(h&amp;&amp;d&amp;&amp;(!d.body||!d.body.firstChild)){if(h.call){i+=&#39;.call&#39;;setTimeout(h,0)}else if(h.match){i+=&#39;.nav&#39;;w.location.replace(h)}s.log&amp;&amp;s.log.push(i)}" scrolling="no" vspace="0" width="300" id="aswift_0" name="aswift_0" style="left:0;position:absolute;top:0;"></iframe></ins></ins>
		</div>
	      
	      <span class="content"><page>
<div id="subtitle"><b>Sockets. O que são, pra que servem e como funcionam</b></div>

A estrutura Socket foi uma inovação apresentada pelo sistema Berkeley Unix. Através desta estrutura, o programador por ler e gravar bytes como uma stream qualquer de dados.
Além disto, ?esconde? os detalhes de baixo nível das redes tais como tipo de transmissão, tamanho de pacote, retransmissão e etc.

Através de um socket podemos realizar várias operações, como exemplo:

<li>Estabelecer conexões entre máquinas
</li><li>Enviar e receber dados
</li><li>Encerrar conexões
</li><li>Esperar por conexões em determinada porta

O socket é na verdade um elemento de software que provê uma interface de rede para a aplicação.

Vamos tratar dos sockets TCP, porém Java permite a utilização de sockets UDP e fornece meios para que você possa utilizar outros tipos não definidos através da classe SocketImpl e da interface SocketImplFactory.

<div id="subtitle"><b>Onde estão? Quem são?</b></div>
Os sockets estão localizados no pacote java.net. Basicamente precisamos das classes Socket e ServerSocket para conseguir implementar uma aplicação básica.

A classe Socket implementa o socket cliente. Para construir um socket precisamos saber qual é o IP que desejamos conectar e a porta de conexão (que varia de 0 a 65535). 

A classe ServerSocket fornece a interface de rede necessária para que a aplicação possa funcionar como um servidor TCP. Para criar um ServerSocket precisamos saber qual é a porta que será utilizada. Comumente utiliza-se portas acima de 1000 pois as inferiores são utilizadas pelo sistema operacional.



<page>

<div id="subtitle"><b>Mãos à obra</b></div>
Para ilustrar o uso dos sockets, iremos construir uma aplicação bastante simples para comunicação de dois computadores. Um computador ficará aguardando alguma conexão e irá exibir em tela o que foi recebido.

Veremos então a classe Servidor e a classe Cliente.

<br> <div class="dp-highlighter"><div class="bar"><div class="tools"><a href="http://www.guj.com.br/articles/126#" onclick="dp.sh.Toolbar.Command(&#39;ViewSource&#39;,this);return false;">view plain</a><a href="http://www.guj.com.br/articles/126#" onclick="dp.sh.Toolbar.Command(&#39;PrintSource&#39;,this);return false;">print</a><a href="http://www.guj.com.br/articles/126#" onclick="dp.sh.Toolbar.Command(&#39;About&#39;,this);return false;">?</a></div></div><ol start="1" class="dp-j"><li class="alt"><span><span class="keyword">import</span><span>&nbsp;java.io.BufferedReader;&nbsp;&nbsp;</span></span></li><li class=""><span><span class="keyword">import</span><span>&nbsp;java.io.IOException;&nbsp;&nbsp;</span></span></li><li class="alt"><span><span class="keyword">import</span><span>&nbsp;java.io.InputStreamReader;&nbsp;&nbsp;</span></span></li><li class=""><span><span class="keyword">import</span><span>&nbsp;java.net.ServerSocket;&nbsp;&nbsp;</span></span></li><li class="alt"><span><span class="keyword">import</span><span>&nbsp;java.net.Socket;&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;</span></li><li class="alt"><span><span class="keyword">public</span><span>&nbsp;</span><span class="keyword">class</span><span>&nbsp;Servidor&nbsp;{&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">public</span><span>&nbsp;</span><span class="keyword">static</span><span>&nbsp;</span><span class="keyword">void</span><span>&nbsp;main(String[]&nbsp;args)&nbsp;{&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="comment">//Declaro&nbsp;o&nbsp;ServerSocket</span><span>&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ServerSocket&nbsp;serv=<span class="keyword">null</span><span>;&nbsp;&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="comment">//Declaro&nbsp;o&nbsp;Socket&nbsp;de&nbsp;comunicação</span><span>&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Socket&nbsp;s=&nbsp;<span class="keyword">null</span><span>;&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="comment">//Declaro&nbsp;o&nbsp;leitor&nbsp;para&nbsp;a&nbsp;entrada&nbsp;de&nbsp;dados</span><span>&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;BufferedReader&nbsp;entrada=<span class="keyword">null</span><span>;&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">try</span><span>{&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="comment">//Cria&nbsp;o&nbsp;ServerSocket&nbsp;na&nbsp;porta&nbsp;7000&nbsp;se&nbsp;estiver&nbsp;disponível</span><span>&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;serv&nbsp;=&nbsp;<span class="keyword">new</span><span>&nbsp;ServerSocket(</span><span class="number">7000</span><span>);&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="comment">//Aguarda&nbsp;uma&nbsp;conexão&nbsp;na&nbsp;porta&nbsp;especificada&nbsp;e&nbsp;cria&nbsp;retorna&nbsp;o&nbsp;socket&nbsp;que&nbsp;irá&nbsp;comunicar&nbsp;com&nbsp;o&nbsp;cliente</span><span>&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;s&nbsp;=&nbsp;serv.accept();&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="comment">//Cria&nbsp;um&nbsp;BufferedReader&nbsp;para&nbsp;o&nbsp;canal&nbsp;da&nbsp;stream&nbsp;de&nbsp;entrada&nbsp;de&nbsp;dados&nbsp;do&nbsp;socket&nbsp;s</span><span>&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;entrada&nbsp;=&nbsp;<span class="keyword">new</span><span>&nbsp;BufferedReader(</span><span class="keyword">new</span><span>&nbsp;InputStreamReader(s.getInputStream()));&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="comment">//Aguarda&nbsp;por&nbsp;algum&nbsp;dado&nbsp;e&nbsp;imprime&nbsp;a&nbsp;linha&nbsp;recebida&nbsp;quando&nbsp;recebe</span><span>&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System.out.println(entrada.readLine());&nbsp;&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="comment">//trata&nbsp;possíveis&nbsp;excessões&nbsp;de&nbsp;input/output.&nbsp;Note&nbsp;que&nbsp;as&nbsp;excessões&nbsp;são&nbsp;as&nbsp;mesmas&nbsp;utilizadas&nbsp;para&nbsp;as&nbsp;classes&nbsp;de&nbsp;java.io&nbsp;&nbsp;</span><span>&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<span class="keyword">catch</span><span>(IOException&nbsp;e){&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="comment">//Imprime&nbsp;uma&nbsp;notificação&nbsp;na&nbsp;saída&nbsp;padrão&nbsp;caso&nbsp;haja&nbsp;algo&nbsp;errado.</span><span>&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System.out.println(<span class="string">"Algum&nbsp;problema&nbsp;ocorreu&nbsp;para&nbsp;criar&nbsp;ou&nbsp;receber&nbsp;o&nbsp;socket."</span><span>);&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<span class="keyword">finally</span><span>{&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">try</span><span>{&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="comment">//Encerro&nbsp;o&nbsp;socket&nbsp;de&nbsp;comunicação</span><span>&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;s.close();&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="comment">//Encerro&nbsp;o&nbsp;ServerSocket</span><span>&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;serv.close();&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<span class="keyword">catch</span><span>(IOException&nbsp;e){&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;</span></li><li class="alt"><span>}&nbsp;&nbsp;</span></li></ol></div><textarea name="code" class="java" cols="60" rows="10" style="display: none; ">import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.net.ServerSocket;
import java.net.Socket;

public class Servidor {

	public static void main(String[] args) {
		
		//Declaro o ServerSocket
		ServerSocket serv=null; 
		
		//Declaro o Socket de comunicação
		Socket s= null;
		
		//Declaro o leitor para a entrada de dados
		BufferedReader entrada=null;
				
		try{
			
			//Cria o ServerSocket na porta 7000 se estiver disponível
			serv = new ServerSocket(7000);
		
			//Aguarda uma conexão na porta especificada e cria retorna o socket que irá comunicar com o cliente
			s = serv.accept();
			
			//Cria um BufferedReader para o canal da stream de entrada de dados do socket s
			entrada = new BufferedReader(new InputStreamReader(s.getInputStream()));
			
			//Aguarda por algum dado e imprime a linha recebida quando recebe
			System.out.println(entrada.readLine());	
			
		//trata possíveis excessões de input/output. Note que as excessões são as mesmas utilizadas para as classes de java.io	
		}catch(IOException e){
		
			//Imprime uma notificação na saída padrão caso haja algo errado.
			System.out.println("Algum problema ocorreu para criar ou receber o socket.");
		
		}finally{
			
			try{
				
				//Encerro o socket de comunicação
				s.close();
				
				//Encerro o ServerSocket
				serv.close();
				
			}catch(IOException e){
			}
		}
	
		
		
		
		
	}
}

</textarea> <br>

Vamos explicar os pontos importantes da classe acima.

No techo 

<br> <div class="dp-highlighter"><div class="bar"><div class="tools"><a href="http://www.guj.com.br/articles/126#" onclick="dp.sh.Toolbar.Command(&#39;ViewSource&#39;,this);return false;">view plain</a><a href="http://www.guj.com.br/articles/126#" onclick="dp.sh.Toolbar.Command(&#39;PrintSource&#39;,this);return false;">print</a><a href="http://www.guj.com.br/articles/126#" onclick="dp.sh.Toolbar.Command(&#39;About&#39;,this);return false;">?</a></div></div><ol start="1" class="dp-j"><li class="alt"><span><span class="comment">//Declaro&nbsp;o&nbsp;ServerSocket</span><span>&nbsp;&nbsp;</span></span></li><li class=""><span>ServerSocket&nbsp;serv=<span class="keyword">null</span><span>;&nbsp;&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;</span></li><li class=""><span><span class="comment">//Declaro&nbsp;o&nbsp;Socket&nbsp;de&nbsp;comunicação</span><span>&nbsp;&nbsp;</span></span></li><li class="alt"><span>Socket&nbsp;s=&nbsp;<span class="keyword">null</span><span>;&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;</span></li><li class="alt"><span><span class="comment">//Declaro&nbsp;o&nbsp;leitor&nbsp;para&nbsp;a&nbsp;entrada&nbsp;de&nbsp;dados</span><span>&nbsp;&nbsp;</span></span></li><li class=""><span>BufferedReader&nbsp;entrada=<span class="keyword">null</span><span>;&nbsp;&nbsp;</span></span></li></ol></div><textarea name="code" class="java" cols="60" rows="10" style="display: none; ">//Declaro o ServerSocket
ServerSocket serv=null; 

//Declaro o Socket de comunicação
Socket s= null;

//Declaro o leitor para a entrada de dados
BufferedReader entrada=null;
</textarea> <br>

apenas declaramos as variáveis que iremos utilizar.

Na trecho

<br> <div class="dp-highlighter"><div class="bar"><div class="tools"><a href="http://www.guj.com.br/articles/126#" onclick="dp.sh.Toolbar.Command(&#39;ViewSource&#39;,this);return false;">view plain</a><a href="http://www.guj.com.br/articles/126#" onclick="dp.sh.Toolbar.Command(&#39;PrintSource&#39;,this);return false;">print</a><a href="http://www.guj.com.br/articles/126#" onclick="dp.sh.Toolbar.Command(&#39;About&#39;,this);return false;">?</a></div></div><ol start="1" class="dp-j"><li class="alt"><span><span class="comment">//Cria&nbsp;o&nbsp;ServerSocket&nbsp;na&nbsp;porta&nbsp;7000&nbsp;se&nbsp;estiver&nbsp;disponível</span><span>&nbsp;&nbsp;</span></span></li><li class=""><span>serv&nbsp;=&nbsp;<span class="keyword">new</span><span>&nbsp;ServerSocket(</span><span class="number">7000</span><span>);&nbsp;&nbsp;</span></span></li></ol></div><textarea name="code" class="java" cols="60" rows="10" style="display: none; ">//Cria o ServerSocket na porta 7000 se estiver disponível
serv = new ServerSocket(7000);
</textarea> <br>

, criamos o server socket na porta 7000.
</page>
<page>
No trecho

<br> <div class="dp-highlighter"><div class="bar"><div class="tools"><a href="http://www.guj.com.br/articles/126#" onclick="dp.sh.Toolbar.Command(&#39;ViewSource&#39;,this);return false;">view plain</a><a href="http://www.guj.com.br/articles/126#" onclick="dp.sh.Toolbar.Command(&#39;PrintSource&#39;,this);return false;">print</a><a href="http://www.guj.com.br/articles/126#" onclick="dp.sh.Toolbar.Command(&#39;About&#39;,this);return false;">?</a></div></div><ol start="1" class="dp-j"><li class="alt"><span><span class="comment">//Aguarda&nbsp;uma&nbsp;conexão&nbsp;na&nbsp;porta&nbsp;especificada&nbsp;e&nbsp;cria&nbsp;retorna&nbsp;o&nbsp;socket&nbsp;que&nbsp;irá&nbsp;comunicar&nbsp;com&nbsp;o&nbsp;cliente</span><span>&nbsp;&nbsp;</span></span></li><li class=""><span>s&nbsp;=&nbsp;serv.accept();&nbsp;&nbsp;</span></li></ol></div><textarea name="code" class="java" cols="60" rows="10" style="display: none; ">//Aguarda uma conexão na porta especificada e cria retorna o socket que irá comunicar com o cliente
s = serv.accept();
</textarea> <br>

 utilizamos o método accept() que espera por uma conexão e continua somente quando recebe uma. Então retorna um socket para comunicar com o cliente que acaba de se conectar. 
O método accept() do ServerSocket, quando invocado, faz com que a Thread atual seja "paralisada" até que uma conexão seja recebida. 
É comum, em ambientes reais, lançarmos uma Thread a cada conexão recebida pelo ServerSocket. Isto é feito para que possamos tratar vários clientes conectados simultaneamente. Veremos como fazer isto em um outro tutorial.

No trecho

<br> <div class="dp-highlighter"><div class="bar"><div class="tools"><a href="http://www.guj.com.br/articles/126#" onclick="dp.sh.Toolbar.Command(&#39;ViewSource&#39;,this);return false;">view plain</a><a href="http://www.guj.com.br/articles/126#" onclick="dp.sh.Toolbar.Command(&#39;PrintSource&#39;,this);return false;">print</a><a href="http://www.guj.com.br/articles/126#" onclick="dp.sh.Toolbar.Command(&#39;About&#39;,this);return false;">?</a></div></div><ol start="1" class="dp-j"><li class="alt"><span><span class="comment">//Cria&nbsp;um&nbsp;BufferedReader&nbsp;para&nbsp;o&nbsp;canal&nbsp;da&nbsp;stream&nbsp;de&nbsp;entrada&nbsp;de&nbsp;dados&nbsp;do&nbsp;socket&nbsp;s</span><span>&nbsp;&nbsp;</span></span></li><li class=""><span>entrada&nbsp;=&nbsp;<span class="keyword">new</span><span>&nbsp;BufferedReader(</span><span class="keyword">new</span><span>&nbsp;InputStreamReader(s.getInputStream()));&nbsp;&nbsp;</span></span></li></ol></div><textarea name="code" class="java" cols="60" rows="10" style="display: none; ">//Cria um BufferedReader para o canal da stream de entrada de dados do socket s
entrada = new BufferedReader(new InputStreamReader(s.getInputStream()));
</textarea> <br>

 criamos um leitor dos dados de entrada baseado no canal de entrada de dados do socket. 
O BufferedReader lê texto de uma text-input stream e os deixa em buffer para leitura eficiente das informações. 
O InputStreamReader lê os bytes que estão chegando e os transforma em caracteres para que o BufferedReader possa entender.

No trecho

<br> <div class="dp-highlighter"><div class="bar"><div class="tools"><a href="http://www.guj.com.br/articles/126#" onclick="dp.sh.Toolbar.Command(&#39;ViewSource&#39;,this);return false;">view plain</a><a href="http://www.guj.com.br/articles/126#" onclick="dp.sh.Toolbar.Command(&#39;PrintSource&#39;,this);return false;">print</a><a href="http://www.guj.com.br/articles/126#" onclick="dp.sh.Toolbar.Command(&#39;About&#39;,this);return false;">?</a></div></div><ol start="1" class="dp-j"><li class="alt"><span><span class="comment">//Aguarda&nbsp;por&nbsp;algum&nbsp;dado&nbsp;e&nbsp;imprime&nbsp;a&nbsp;linha&nbsp;recebida&nbsp;quando&nbsp;recebe</span><span>&nbsp;&nbsp;</span></span></li><li class=""><span>System.out.println(entrada.readLine());&nbsp;&nbsp;&nbsp;</span></li></ol></div><textarea name="code" class="java" cols="60" rows="10" style="display: none; ">//Aguarda por algum dado e imprime a linha recebida quando recebe
System.out.println(entrada.readLine());	
</textarea> <br>

 chamamos o método readline() da classe BufferedReader. Através deste método, o programa aguarda a chegada de algum dado no canal de entrada e lê uma linha. Após linha ser recebida ela é impressa na saída padrão do sistema com o popular System.out.println().

Nas linhas

<br> <div class="dp-highlighter"><div class="bar"><div class="tools"><a href="http://www.guj.com.br/articles/126#" onclick="dp.sh.Toolbar.Command(&#39;ViewSource&#39;,this);return false;">view plain</a><a href="http://www.guj.com.br/articles/126#" onclick="dp.sh.Toolbar.Command(&#39;PrintSource&#39;,this);return false;">print</a><a href="http://www.guj.com.br/articles/126#" onclick="dp.sh.Toolbar.Command(&#39;About&#39;,this);return false;">?</a></div></div><ol start="1" class="dp-j"><li class="alt"><span><span class="comment">//Encerro&nbsp;o&nbsp;socket&nbsp;de&nbsp;comunicação</span><span>&nbsp;&nbsp;</span></span></li><li class=""><span>s.close();&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;</span></li><li class=""><span><span class="comment">//Encerro&nbsp;o&nbsp;ServerSocket</span><span>&nbsp;&nbsp;</span></span></li><li class="alt"><span>serv.close();&nbsp;&nbsp;</span></li></ol></div><textarea name="code" class="java" cols="60" rows="10" style="display: none; ">//Encerro o socket de comunicação
s.close();

//Encerro o ServerSocket
serv.close();
</textarea> <br>

, fechamos os sockets. Note que fizemos isto dentro de um bloco do tipo finally pois isto garante que os recursos serão liberados. É muito importante liberar este tipo de recurso sempre que não forem mais necessários, pois são finitos e representam um custo considerável de manutenção.

</page>
<page>
<div id="subtitle"><b>Mãos à Obra - Continuando...</b></div>
Agora vejamos a classe Cliente.

<br> <div class="dp-highlighter"><div class="bar"><div class="tools"><a href="http://www.guj.com.br/articles/126#" onclick="dp.sh.Toolbar.Command(&#39;ViewSource&#39;,this);return false;">view plain</a><a href="http://www.guj.com.br/articles/126#" onclick="dp.sh.Toolbar.Command(&#39;PrintSource&#39;,this);return false;">print</a><a href="http://www.guj.com.br/articles/126#" onclick="dp.sh.Toolbar.Command(&#39;About&#39;,this);return false;">?</a></div></div><ol start="1" class="dp-j"><li class="alt"><span><span class="keyword">import</span><span>&nbsp;java.io.IOException;&nbsp;&nbsp;</span></span></li><li class=""><span><span class="keyword">import</span><span>&nbsp;java.io.PrintStream;&nbsp;&nbsp;</span></span></li><li class="alt"><span><span class="keyword">import</span><span>&nbsp;java.net.Socket;&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;</span></li><li class="alt"><span><span class="keyword">public</span><span>&nbsp;</span><span class="keyword">class</span><span>&nbsp;Cliente&nbsp;{&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">public</span><span>&nbsp;</span><span class="keyword">static</span><span>&nbsp;</span><span class="keyword">void</span><span>&nbsp;main(String[]&nbsp;args)&nbsp;{&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="comment">//Declaro&nbsp;o&nbsp;socket&nbsp;cliente</span><span>&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Socket&nbsp;s&nbsp;=&nbsp;<span class="keyword">null</span><span>;&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="comment">//Declaro&nbsp;a&nbsp;Stream&nbsp;de&nbsp;saida&nbsp;de&nbsp;dados</span><span>&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;PrintStream&nbsp;ps&nbsp;=&nbsp;<span class="keyword">null</span><span>;&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">try</span><span>{&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="comment">//Cria&nbsp;o&nbsp;socket&nbsp;com&nbsp;o&nbsp;recurso&nbsp;desejado&nbsp;na&nbsp;porta&nbsp;especificada</span><span>&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;s&nbsp;=&nbsp;<span class="keyword">new</span><span>&nbsp;Socket(</span><span class="string">"127.0.0.1"</span><span>,</span><span class="number">7000</span><span>);&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="comment">//Cria&nbsp;a&nbsp;Stream&nbsp;de&nbsp;saida&nbsp;de&nbsp;dados</span><span>&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ps&nbsp;=&nbsp;<span class="keyword">new</span><span>&nbsp;PrintStream(s.getOutputStream());&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="comment">//Imprime&nbsp;uma&nbsp;linha&nbsp;para&nbsp;a&nbsp;stream&nbsp;de&nbsp;saída&nbsp;de&nbsp;dados</span><span>&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ps.println(<span class="string">"Estou&nbsp;enviando&nbsp;dados&nbsp;para&nbsp;o&nbsp;servidor"</span><span>);&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="comment">//Trata&nbsp;possíveis&nbsp;exceções</span><span>&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<span class="keyword">catch</span><span>(IOException&nbsp;e){&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System.out.println(<span class="string">"Algum&nbsp;problema&nbsp;ocorreu&nbsp;ao&nbsp;criar&nbsp;ou&nbsp;enviar&nbsp;dados&nbsp;pelo&nbsp;socket."</span><span>);&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<span class="keyword">finally</span><span>{&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">try</span><span>{&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="comment">//Encerra&nbsp;o&nbsp;socket&nbsp;cliente</span><span>&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;s.close();&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<span class="keyword">catch</span><span>(IOException&nbsp;e){}&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;</span></li><li class="alt"><span>}&nbsp;&nbsp;</span></li></ol></div><textarea name="code" class="java" cols="60" rows="10" style="display: none; ">
import java.io.IOException;
import java.io.PrintStream;
import java.net.Socket;

public class Cliente {

	public static void main(String[] args) {
		
		//Declaro o socket cliente
		Socket s = null;
		
		//Declaro a Stream de saida de dados
		PrintStream ps = null;
		
		try{
			
			//Cria o socket com o recurso desejado na porta especificada
			s = new Socket("127.0.0.1",7000);
			
			//Cria a Stream de saida de dados
			ps = new PrintStream(s.getOutputStream());
			
			//Imprime uma linha para a stream de saída de dados
			ps.println("Estou enviando dados para o servidor");
			
		//Trata possíveis exceções
		}catch(IOException e){
			
			System.out.println("Algum problema ocorreu ao criar ou enviar dados pelo socket.");
		
		}finally{
			
			try{
				
				//Encerra o socket cliente
				s.close();
				
			}catch(IOException e){}
		
		}

	}
}

</textarea> <br>

Nas linhas 

<br> <div class="dp-highlighter"><div class="bar"><div class="tools"><a href="http://www.guj.com.br/articles/126#" onclick="dp.sh.Toolbar.Command(&#39;ViewSource&#39;,this);return false;">view plain</a><a href="http://www.guj.com.br/articles/126#" onclick="dp.sh.Toolbar.Command(&#39;PrintSource&#39;,this);return false;">print</a><a href="http://www.guj.com.br/articles/126#" onclick="dp.sh.Toolbar.Command(&#39;About&#39;,this);return false;">?</a></div></div><ol start="1" class="dp-j"><li class="alt"><span><span class="comment">//Declaro&nbsp;o&nbsp;socket&nbsp;cliente</span><span>&nbsp;&nbsp;</span></span></li><li class=""><span>Socket&nbsp;s&nbsp;=&nbsp;<span class="keyword">null</span><span>;&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;</span></li><li class=""><span><span class="comment">//Declaro&nbsp;a&nbsp;Stream&nbsp;de&nbsp;saida&nbsp;de&nbsp;dados</span><span>&nbsp;&nbsp;</span></span></li><li class="alt"><span>PrintStream&nbsp;ps&nbsp;=&nbsp;<span class="keyword">null</span><span>;&nbsp;&nbsp;</span></span></li></ol></div><textarea name="code" class="java" cols="60" rows="10" style="display: none; ">//Declaro o socket cliente
Socket s = null;

//Declaro a Stream de saida de dados
PrintStream ps = null;
</textarea> <br>

apenas declaramos as variáveis que iremos utilizar.

Na linha 

<br> <div class="dp-highlighter"><div class="bar"><div class="tools"><a href="http://www.guj.com.br/articles/126#" onclick="dp.sh.Toolbar.Command(&#39;ViewSource&#39;,this);return false;">view plain</a><a href="http://www.guj.com.br/articles/126#" onclick="dp.sh.Toolbar.Command(&#39;PrintSource&#39;,this);return false;">print</a><a href="http://www.guj.com.br/articles/126#" onclick="dp.sh.Toolbar.Command(&#39;About&#39;,this);return false;">?</a></div></div><ol start="1" class="dp-j"><li class="alt"><span><span class="comment">//Cria&nbsp;o&nbsp;socket&nbsp;com&nbsp;o&nbsp;recurso&nbsp;desejado&nbsp;na&nbsp;porta&nbsp;especificada</span><span>&nbsp;&nbsp;</span></span></li><li class=""><span>s&nbsp;=&nbsp;<span class="keyword">new</span><span>&nbsp;Socket(</span><span class="string">"127.0.0.1"</span><span>,</span><span class="number">7000</span><span>);&nbsp;&nbsp;</span></span></li></ol></div><textarea name="code" class="java" cols="60" rows="10" style="display: none; ">//Cria o socket com o recurso desejado na porta especificada
s = new Socket("127.0.0.1",7000);
</textarea> <br>

 criamos o socket. De acordo com o construtor que utilizamos, criamos um socket para comunicação com o IP 127.0.0.1 (<i>IP LoopBack</i>*) na porta 7000 (que a porta que nosso servidor irá ?escutar?.

Na linha 

<br> <div class="dp-highlighter"><div class="bar"><div class="tools"><a href="http://www.guj.com.br/articles/126#" onclick="dp.sh.Toolbar.Command(&#39;ViewSource&#39;,this);return false;">view plain</a><a href="http://www.guj.com.br/articles/126#" onclick="dp.sh.Toolbar.Command(&#39;PrintSource&#39;,this);return false;">print</a><a href="http://www.guj.com.br/articles/126#" onclick="dp.sh.Toolbar.Command(&#39;About&#39;,this);return false;">?</a></div></div><ol start="1" class="dp-j"><li class="alt"><span><span class="comment">//Cria&nbsp;a&nbsp;Stream&nbsp;de&nbsp;saida&nbsp;de&nbsp;dados</span><span>&nbsp;&nbsp;</span></span></li><li class=""><span>ps&nbsp;=&nbsp;<span class="keyword">new</span><span>&nbsp;PrintStream(s.getOutputStream());&nbsp;&nbsp;</span></span></li></ol></div><textarea name="code" class="java" cols="60" rows="10" style="display: none; ">//Cria a Stream de saida de dados
ps = new PrintStream(s.getOutputStream());
</textarea> <br>

 criamos um objeto do tipo PrintStream para poder imprimir dados para o canal de saída do socket.

Na linha 

<br> <div class="dp-highlighter"><div class="bar"><div class="tools"><a href="http://www.guj.com.br/articles/126#" onclick="dp.sh.Toolbar.Command(&#39;ViewSource&#39;,this);return false;">view plain</a><a href="http://www.guj.com.br/articles/126#" onclick="dp.sh.Toolbar.Command(&#39;PrintSource&#39;,this);return false;">print</a><a href="http://www.guj.com.br/articles/126#" onclick="dp.sh.Toolbar.Command(&#39;About&#39;,this);return false;">?</a></div></div><ol start="1" class="dp-j"><li class="alt"><span><span class="comment">//Imprime&nbsp;uma&nbsp;linha&nbsp;para&nbsp;a&nbsp;stream&nbsp;de&nbsp;saída&nbsp;de&nbsp;dados</span><span>&nbsp;&nbsp;</span></span></li><li class=""><span>ps.println(<span class="string">"Estou&nbsp;enviando&nbsp;dados&nbsp;para&nbsp;o&nbsp;servidor"</span><span>);&nbsp;&nbsp;</span></span></li></ol></div><textarea name="code" class="java" cols="60" rows="10" style="display: none; ">//Imprime uma linha para a stream de saída de dados
ps.println("Estou enviando dados para o servidor");
</textarea> <br>

 utilizamos o método println() da classe PrintStream para imprimir uma String que será enviada através do socket para o Servidor.

	O método println() da classe PrintStream converte os caracteres digitados para o formato adequado de envio através do socket. Verifique a especificação da API para verificar todos os tipos de dados que podem ser impressos por este método.

Na linha 

<br> <div class="dp-highlighter"><div class="bar"><div class="tools"><a href="http://www.guj.com.br/articles/126#" onclick="dp.sh.Toolbar.Command(&#39;ViewSource&#39;,this);return false;">view plain</a><a href="http://www.guj.com.br/articles/126#" onclick="dp.sh.Toolbar.Command(&#39;PrintSource&#39;,this);return false;">print</a><a href="http://www.guj.com.br/articles/126#" onclick="dp.sh.Toolbar.Command(&#39;About&#39;,this);return false;">?</a></div></div><ol start="1" class="dp-j"><li class="alt"><span><span class="comment">//Encerra&nbsp;o&nbsp;socket&nbsp;cliente</span><span>&nbsp;&nbsp;</span></span></li><li class=""><span>s.close();&nbsp;&nbsp;</span></li></ol></div><textarea name="code" class="java" cols="60" rows="10" style="display: none; ">//Encerra o socket cliente
s.close();
</textarea> <br>

 fechamos o socket dentro do bloco finally.

Agora, que entendemos o código podemos executá-los

Copie os arquivos do tutorial para uma pasta e compile-os da forma comum.

javac Servidor.java 
javac Cliente.java

Agora, abra 2 janelas de prompt. Vamos executar cada classe em um prompt diferente (para testar em um mesmo equipamento).

Em uma das janelas digite java Servidor e na outra digite java Cliente.

Você deverá perceber que ao executar a classe Cliente, o texto ?Estou enviando dados para o servidor? será exibido na janela da classe Servidor.

Pronto, esta é a nossa aplicação funcionando em rede de forma simples.

Faça testes, verifique o que acontece quando o servidor não está rodando, altere os Ips caso esteja em rede, ou se estiver conectado a internet teste com seus amigos, leia a especificação das APIs e, quem sabe, adicionar recursos...

Demos o passo inicial, agora é com você!

*<i>IP LoopBack</i> ? Termo utilizado para representar uma forma de comunicação com o próprio equipamento (geralmente utilizado para efetuar testes). Para acessá-lo, utilizamos 127.0.0.1 ou simplesmente <i>localhost</i>.

</page>


    

    <span class="pdf">
    
    </span>
  </li></page></span></div>
  </div>
	<b class="spiffy"><b class="spiffy5"></b><b class="spiffy4"></b><b class="spiffy3"></b><b class="spiffy2"><b></b></b><b class="spiffy1"><b></b></b></b>
</div>

</div>


<!-- OAS AD 'x01' begin -->
<script language="JavaScript">
<!--
OAS_AD('x01');
//-->
</script><a href="http://media.realmedia.com.br/RealMedia/ads/click_lx.ads/guj/internas/2018118069/x01/default/empty.gif/76556850786b3433424b5141416b3576" target="_top"><img src="./Usando Sockets_files/empty.gif" width="1" height="1" alt="" border="0"></a>
<!-- OAS AD 'x01' end -->

<iframe src="./Usando Sockets_files/ping_session.htm" height="0" width="0" frameborder="0" scrolling="no"></iframe>
  <div id="footer">
  	<p>Apoiado e desenvolvido por <a href="http://www.caelum.com.br/">Caelum Cursos Java</a> - GUJ: desde 2002 <br> Conheça também <a href="http://www.agendatech.com.br/">AgendaTech</a>, <a href="http://www.tectura.com.br/">Tectura</a>, <a href="http://www.programadorpoliglota.com.br/">Programador Poliglota</a> e <a href="http://www.infoq.com/br">InfoQ Brasil</a>&nbsp;</p>
  </div>
 
<script type="text/javascript">
var gaJsHost = (("https:" == document.location.protocol) ? "https://ssl." : "http://www.");
document.write(unescape("%3Cscript src='" + gaJsHost + "google-analytics.com/ga.js' type='text/javascript'%3E%3C/script%3E"));
</script><script src="./Usando Sockets_files/ga.js" type="text/javascript"></script>
<script type="text/javascript">
var pageTracker = _gat._getTracker("UA-132222-1");
pageTracker._initData();
pageTracker._trackPageview();
</script>
  

<div class="SkipThisFixedPosition top-iframe-wrapper" style="width: 100%; height: 34px; position: fixed; top: 0px !important; left: 0px; z-index: 99997; "><iframe style="width:100%;height:34px;top:0px;left:0px;" src="./Usando Sockets_files/container.htm" scrolling="no" class="toolbarContainer" frameborder="0px" id="CWTBiframe0"></iframe></div><div id="mainContainer_CTID"><div class="fixedDiv SkipThisFixedPosition UrlGadgetsDiv" style="position: fixed; left: 0px; top: 34px !important; z-index: 2147483640; "></div><div class="fixedDiv SkipThisFixedPosition GeneralGadgetsDiv" style="position: fixed; left: 0px; top: 34px !important; z-index: 2147483640; width: 100%; "></div></div></body></html>